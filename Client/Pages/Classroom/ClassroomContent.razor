@page "/classroom/{CourseId:int}"
@inject NavigationManager NavigationManager;

<style>
    /* Post Creation Form Styles */
    div.new-post-form {
        margin-bottom: 20px;
        padding: 15px;
        border: 1px solid #dee2e6;
        border-radius: 5px;
        background-color: #f8f9fa;
    }

    div.new-post-form h4 {
        margin-bottom: 15px;
    }

    div.new-post-form div {
        margin-bottom: 10px;
    }

    div.new-post-form label {
        display: block;
        margin-bottom: 5px;
        font-weight: bold;
    }

    div.new-post-form input[type="text"] {
        width: 100%;
        padding: 8px;
        border: 1px solid #ced4da;
        border-radius: 4px;
        box-sizing: border-box;
    }

    div.new-post-form button {
        display: inline-block;
        padding: 10px 20px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 16px;
    }

    div.new-post-form button:hover {
        background-color: #0056b3;
    }

    /* General post container styles */
    .post-container {
        display: flex;
        flex-direction: column;
        gap: 20px;
        margin-top: 20px;
    }

    /* Individual post card styles */
    .post-card {
        background-color: #ffffff;
        border: 1px solid #e0e0e0;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
    }

    .post-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 15px rgba(0, 0, 0, 0.2);
    }

    /* Post card header */
    .post-card-header {
        background-color: #f8f9fa;
        padding: 12px 20px;
        border-bottom: 1px solid #e0e0e0;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .post-card-header h5 {
        margin: 0;
        font-size: 18px;
        color: #333;
    }

    /* Post card body */
    .post-card-body {
        padding: 20px;
    }

    .post-card-body p {
        text-align: left; /* Ensure text is aligned to the left */
        margin: 0;
        line-height: 1.6;
        color: #555;
    }


    /* Post card attachment link */
    .post-card-attachment {
        margin-top: 10px;
    }

    .post-card-attachment a {
        display: inline-block;
        background-color: #007bff;
        color: #ffffff;
        padding: 6px 12px;
        border-radius: 4px;
        text-decoration: none;
        font-size: 14px;
    }

    .post-card-attachment a:hover {
        background-color: #0056b3;
    }

    /* Submission button */
    .submission-button {
        background-color: #28a745;
        color: white;
        border: none;
        border-radius: 4px;
        padding: 6px 12px;
        text-decoration: none;
        cursor: pointer;
        font-size: 14px;
    }

    .submission-button:hover {
        background-color: #218838;
    }

    /* Toggle switch styles */
    .toggle-container {
        display: flex;
        align-items: center;
    }

    .toggle-label {
        margin-right: 10px;
    }

    .toggle-switch {
        position: relative;
        display: inline-block;
        width: 40px;
        height: 20px;
    }

    .toggle-slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        border-radius: 20px;
        transition: .4s;
    }

    .toggle-slider:before {
        position: absolute;
        content: "";
        height: 16px;
        width: 16px;
        left: 2px;
        bottom: 2px;
        background-color: white;
        border-radius: 50%;
        transition: .4s;
    }

    input[type="checkbox"] {
        display: none;
    }

    input[type="checkbox"]:checked + .toggle-slider {
        background-color: #2196F3;
    }

    input[type="checkbox"]:checked + .toggle-slider:before {
        transform: translateX(20px);
    }
</style>

<h3>Classroom Posts for Course ID: @CourseId</h3>

<!-- New Post Form -->
<div class="new-post-form">
    <h4>Add a New Post</h4>
    <div>
        <label for="postDescription">Post Description:</label>
        <input type="text" @bind="newPostDescription" id="postDescription" />
    </div>
    <div>
        <label for="postAttachment">Post Attachment URL:</label>
        <input type="text" @bind="newPostAttachment" id="postAttachment" />
    </div>
    <div class="toggle-container">
        <label class="toggle-label">Submission Post:</label>
        <label class="toggle-switch">
            <input type="checkbox" @bind="isSubmissionPost" />
            <span class="toggle-slider"></span>
        </label>
    </div>
    <button @onclick="AddPost">Add Post</button>
</div>

@if (filteredPosts.Any())
{
    <div class="post-container">
        @foreach (var post in filteredPosts)
        {
            <div class="post-card">
                <div class="post-card-header">
                    <h5>@post.SenderName</h5>
                </div>
                <div class="post-card-body">
                    <p>@post.PostDescription</p>
                    @if (!string.IsNullOrWhiteSpace(post.PostAttachment))
                    {
                        <div class="post-card-attachment">
                            <a href="@post.PostAttachment" target="_blank">View Attachment</a>
                        </div>
                    }
                    @if (post.IsSubmissionPost)
                    {
                        <div class="post-card-attachment">
                            <button class="submission-button" @onclick="() => ViewSubmission(post)">View Submission</button>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
}
else
{
    <p>No posts available for this classroom.</p>
}

@code {
    [Parameter]
    public int CourseId { get; set; }

    private string newPostDescription;
    private string newPostAttachment;
    private bool isSubmissionPost;

    private List<Post> posts = new List<Post>
    {
        // Initial dummy posts
        new Post {PostId = 1, SenderName = "Alice Smith", PostDescription = "Introduction to Programming assignment due next week.", PostAttachment = "http://example.com/assignment1.pdf", ClassroomId = 1},
        new Post {PostId = 2, SenderName = "Bob Jones", PostDescription = "Advanced Web Development project guidelines.", ClassroomId = 1},
        new Post {PostId = 3, SenderName = "Charlie Johnson", PostDescription = "Data Science 101 reading materials.", PostAttachment = "http://example.com/reading.pdf", ClassroomId = 2},
        new Post {PostId = 4, SenderName = "Dana White", PostDescription = "Machine Learning for Beginners resources.", PostAttachment = "http://example.com/resources.pdf", ClassroomId = 3}
    };

    private IEnumerable<Post> filteredPosts;

    protected override void OnParametersSet()
    {
        filteredPosts = posts.Where(p => p.ClassroomId == CourseId);
    }

    private void AddPost()
    {
        if (!string.IsNullOrWhiteSpace(newPostDescription))
        {
            var newPostId = posts.Max(p => p.PostId) + 1; // Generate a new ID for the post
            posts.Add(new Post {PostId = newPostId, SenderName = "System", PostDescription = newPostDescription, PostAttachment = newPostAttachment, ClassroomId = CourseId, IsSubmissionPost = isSubmissionPost});
            
            // Refresh the filtered posts to include the new post
            filteredPosts = posts.Where(p => p.ClassroomId == CourseId).OrderByDescending(p => p.PostId);
        }
    }

    private void ViewSubmission(Post submissionPost)
    {
        // Redirect to the submission page passing the submissionPost information
        NavigationManager.NavigateTo($"/submit/{submissionPost.PostId}");
    }

    public class Post
    {
        public int PostId { get; set; }
        public string SenderName { get; set; }
        public string PostDescription { get; set; }
        public string PostAttachment { get; set; }
        public int ClassroomId { get; set; }
        public bool IsSubmissionPost { get; set; } // Indicates if the post is a submission post
    }
}
